options:
  logging: CLOUD_LOGGING_ONLY

steps:
  # Paso 0: Construir imagen
  - name: 'gcr.io/cloud-builders/docker'
    # args: ['build', '-t', '$_REGION-docker.pkg.dev/$PROJECT_ID/$_REPOSITORY_NAME/$_IMAGE_NAME:latest', '.']
    args: ['build', '-t', '$_REGION-docker.pkg.dev/$PROJECT_ID/$_REPOSITORY_NAME/$_IMAGE_NAME:latest', '-f', 'GCP/Dockerfile', 'GCP']


  # Paso 1: Verificar o crear repositorio
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        if ! gcloud artifacts repositories describe $_REPOSITORY_NAME --location=$_REGION --format='value(name)'; then
          echo "Creando repositorio..."
          gcloud artifacts repositories create $_REPOSITORY_NAME --repository-format=docker --location=$_REGION
        fi

  # Paso 2: Subir imagen al Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '$_REGION-docker.pkg.dev/$PROJECT_ID/$_REPOSITORY_NAME/$_IMAGE_NAME:latest']

  # Paso 3: Desplegar en Cloud Run con acceso restringido
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - '$_CLOUD_RUN_SERVICE'
      - '--image=$_REGION-docker.pkg.dev/$PROJECT_ID/$_REPOSITORY_NAME/$_IMAGE_NAME:latest'
      - '--region=$_REGION'
      - '--platform=managed'
      - '--memory=2Gi'
      - '--no-allow-unauthenticated'
      - '--ingress=internal'

  # Paso 4: Dar permiso al Cloud Build para invocar el servicio
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'services'
      - 'add-iam-policy-binding'
      - '$_CLOUD_RUN_SERVICE'
      - '--region=$_REGION'
      - '--member=serviceAccount:$PROJECT_NUMBER@cloudbuild.gserviceaccount.com'
      - '--role=roles/run.invoker'

  # Paso 5: Esperar y hacer curl con autenticación
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        echo "Esperando a que el servicio esté estable..."
        while [ "$(gcloud run services describe $_CLOUD_RUN_SERVICE --region=$_REGION --platform=managed --format='value(status.conditions[0].status)')" != "True" ]; do
          sleep 10
        done

        BASE_URL=$(gcloud run services describe $_CLOUD_RUN_SERVICE --region=$_REGION --platform=managed --format='value(status.url)')
        TOKEN=$(gcloud auth print-identity-token)

        echo "Probando endpoints con token..."
        curl -H "Authorization: Bearer $TOKEN" "$BASE_URL/train_pipeline"
        curl -H "Authorization: Bearer $TOKEN" "$BASE_URL/predict_pipeline"

substitutions:
  _PROJECT_ID: 'bdb-gcp-qa-cds-idt'
  _REGION: 'us-east4'
  _REPOSITORY_NAME: 'repo-mle-template'
  _IMAGE_NAME: 'mle-template'
  _CLOUD_RUN_SERVICE: 'mle-template-service'
