options:
  logging: CLOUD_LOGGING_ONLY
 
steps:

  # Paso 0: Construir la imagen Docker desde el Dockerfile

  - name: 'gcr.io/cloud-builders/docker'

    args: ['build', '-t', '$_REGION-docker.pkg.dev/$PROJECT_ID/$_REPOSITORY_NAME/$_IMAGE_NAME:latest', '.']
 
  # Paso 1: Verificar si el repositorio de Artifact Registry existe y crearlo si no

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'

    entrypoint: 'sh' # Este paso usa la shell para comandos gcloud/bash

    args:

      - '-c'

      - |

        if ! gcloud artifacts repositories describe $_REPOSITORY_NAME --location=$_REGION --format='value(name)'; then

          echo "El repositorio $_REPOSITORY_NAME no existe. Creando repositorio..."

          gcloud artifacts repositories create $_REPOSITORY_NAME --repository-format=docker --location=$_REGION

          echo "Repositorio $_REPOSITORY_NAME creado."

        else

          echo "El repositorio $_REPOSITORY_NAME ya existe."

        fi
 
  # Paso 2: Subir la imagen a Google Artifact Registry

  - name: 'gcr.io/cloud-builders/docker'

    args: ['push', '$_REGION-docker.pkg.dev/$PROJECT_ID/$_REPOSITORY_NAME/$_IMAGE_NAME:latest']
 
  # Paso 3: Desplegar la imagen en Google Cloud Run

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'

    entrypoint: 'gcloud' # Este paso usa el comando gcloud directamente

    args:

      - 'run'

      - 'deploy'

      - '$_CLOUD_RUN_SERVICE'

      - '--image=$_REGION-docker.pkg.dev/$PROJECT_ID/$_REPOSITORY_NAME/$_IMAGE_NAME:latest'

      - '--region=$_REGION'

      - '--platform=managed'

      - '--memory=2Gi'

      - '--no-allow-unauthenticated'

      - '--ingress=internal'
 
  # Este es el paso clave para invocar el pipeline de Vertex AI DIRECTAMENTE desde Cloud Build

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'

    entrypoint: 'bash' # Mantenemos 'bash' para poder usar pip y export PATH

    args:

      - '-c'

      - |

        # Instalar las dependencias necesarias con pip

        pip install --user --no-warn-script-location --break-system-packages -r requirements.txt

        # Asegurarse de que el path de los scripts instalados por --user esté en el PATH

        # CAMBIO CLAVE AQUÍ: Usamos $$PATH para escapar el $ de Cloud Build

        export PATH=$$PATH:$(python3 -m site --user-base)/bin
 
        # Configurar el proyecto y la región para gcloud CLI

        gcloud config set project $PROJECT_ID

        gcloud config set compute/region $_REGION

        # Ejecutar el script Python que compila y corre el pipeline de Vertex AI

        python3 -c "from pipeline.train_pipeline import compile_pipeline, run_pipeline; compile_pipeline(); run_pipeline()"
 
substitutions:

  _PROJECT_ID: 'bdb-gcp-qa-cds-idt'
  _REGION: 'us-east4'
  _REPOSITORY_NAME: 'repo-mle-template'
  _IMAGE_NAME: 'mle-template'
  _CLOUD_RUN_SERVICE: 'mle-template-service'
 